version: '3'

services:

  redis:
    image: redis:latest
    restart: always
    ports:
      - '6380:6379'
    healthcheck:
      test: [ 'CMD', 'redis-cli', 'ping' ]
      interval: 10s
      timeout: 5s
      retries: 3

  db:
    image: postgres:latest
    container_name: postgres
    restart: always
    env_file:
      - .env
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_PASSWORD: postgres

    ports:
      - '5433:5432'
    volumes:
      - pg_data:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U postgres' ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: app
    tty: true
    env_file:
      - .env
    volumes:
      - .:/code
    ports:
      - "8001:8000"
    depends_on:
      db:
        condition: service_healthy
    command: bash -c "sleep 5 && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"

  celery:
    build: .
    container_name: celery
    tty: true
    env_file:
      - .env
    command: python -m celery -A config worker -l INFO
    depends_on:
        - redis
        - app

  celery_beat:
    build: ..
    container_name: celery_beat
    tty: true
    env_file:
      - .env
    command: python -m celery -A config beat -l info -S django
    depends_on:
      - celery
      - redis
      - app

volumes:
  pg_data:
